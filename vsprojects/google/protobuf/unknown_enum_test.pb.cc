// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/protobuf/unknown_enum_test.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "google/protobuf/unknown_enum_test.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace google {
namespace protobuf {
namespace util {

namespace {

const ::google::protobuf::Descriptor* DownRevision_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DownRevision_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* DownRevision_Enum_descriptor_ = NULL;
const ::google::protobuf::Descriptor* UpRevision_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  UpRevision_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* UpRevision_Enum_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_google_2fprotobuf_2funknown_5fenum_5ftest_2eproto() {
  protobuf_AddDesc_google_2fprotobuf_2funknown_5fenum_5ftest_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "google/protobuf/unknown_enum_test.proto");
  GOOGLE_CHECK(file != NULL);
  DownRevision_descriptor_ = file->message_type(0);
  static const int DownRevision_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DownRevision, value_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DownRevision, values_),
  };
  DownRevision_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      DownRevision_descriptor_,
      DownRevision::default_instance_,
      DownRevision_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DownRevision, _has_bits_[0]),
      -1,
      -1,
      sizeof(DownRevision),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DownRevision, _internal_metadata_),
      -1);
  DownRevision_Enum_descriptor_ = DownRevision_descriptor_->enum_type(0);
  UpRevision_descriptor_ = file->message_type(1);
  static const int UpRevision_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpRevision, value_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpRevision, values_),
  };
  UpRevision_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      UpRevision_descriptor_,
      UpRevision::default_instance_,
      UpRevision_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpRevision, _has_bits_[0]),
      -1,
      -1,
      sizeof(UpRevision),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpRevision, _internal_metadata_),
      -1);
  UpRevision_Enum_descriptor_ = UpRevision_descriptor_->enum_type(0);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_google_2fprotobuf_2funknown_5fenum_5ftest_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      DownRevision_descriptor_, &DownRevision::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      UpRevision_descriptor_, &UpRevision::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_google_2fprotobuf_2funknown_5fenum_5ftest_2eproto() {
  delete DownRevision::default_instance_;
  delete DownRevision_reflection_;
  delete UpRevision::default_instance_;
  delete UpRevision_reflection_;
}

void protobuf_AddDesc_google_2fprotobuf_2funknown_5fenum_5ftest_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\'google/protobuf/unknown_enum_test.prot"
    "o\022\024google.protobuf.util\"\277\001\n\014DownRevision"
    "\022E\n\005value\030\001 \001(\0162\'.google.protobuf.util.D"
    "ownRevision.Enum:\rDEFAULT_VALUE\0227\n\006value"
    "s\030\002 \003(\0162\'.google.protobuf.util.DownRevis"
    "ion.Enum\"/\n\004Enum\022\021\n\rDEFAULT_VALUE\020\002\022\024\n\020N"
    "ONDEFAULT_VALUE\020\003\"\352\001\n\nUpRevision\022C\n\005valu"
    "e\030\001 \001(\0162%.google.protobuf.util.UpRevisio"
    "n.Enum:\rDEFAULT_VALUE\0225\n\006values\030\002 \003(\0162%."
    "google.protobuf.util.UpRevision.Enum\"`\n\004"
    "Enum\022\021\n\rDEFAULT_VALUE\020\002\022\024\n\020NONDEFAULT_VA"
    "LUE\020\003\022\r\n\tNEW_VALUE\020\004\022\017\n\013NEW_VALUE_2\020\005\022\017\n"
    "\013NEW_VALUE_3\020\006", 494);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "google/protobuf/unknown_enum_test.proto", &protobuf_RegisterTypes);
  DownRevision::default_instance_ = new DownRevision();
  UpRevision::default_instance_ = new UpRevision();
  DownRevision::default_instance_->InitAsDefaultInstance();
  UpRevision::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_google_2fprotobuf_2funknown_5fenum_5ftest_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_google_2fprotobuf_2funknown_5fenum_5ftest_2eproto {
  StaticDescriptorInitializer_google_2fprotobuf_2funknown_5fenum_5ftest_2eproto() {
    protobuf_AddDesc_google_2fprotobuf_2funknown_5fenum_5ftest_2eproto();
  }
} static_descriptor_initializer_google_2fprotobuf_2funknown_5fenum_5ftest_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD;
static void MergeFromFail(int line) {
  GOOGLE_CHECK(false) << __FILE__ << ":" << line;
}

}  // namespace


// ===================================================================

const ::google::protobuf::EnumDescriptor* DownRevision_Enum_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DownRevision_Enum_descriptor_;
}
bool DownRevision_Enum_IsValid(int value) {
  switch(value) {
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const DownRevision_Enum DownRevision::DEFAULT_VALUE;
const DownRevision_Enum DownRevision::NONDEFAULT_VALUE;
const DownRevision_Enum DownRevision::Enum_MIN;
const DownRevision_Enum DownRevision::Enum_MAX;
const int DownRevision::Enum_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
const int DownRevision::kValueFieldNumber;
const int DownRevision::kValuesFieldNumber;
#endif  // !_MSC_VER

DownRevision::DownRevision()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.protobuf.util.DownRevision)
}

void DownRevision::InitAsDefaultInstance() {
}

DownRevision::DownRevision(const DownRevision& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:google.protobuf.util.DownRevision)
}

void DownRevision::SharedCtor() {
  _cached_size_ = 0;
  value_ = 2;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DownRevision::~DownRevision() {
  // @@protoc_insertion_point(destructor:google.protobuf.util.DownRevision)
  SharedDtor();
}

void DownRevision::SharedDtor() {
  if (this != default_instance_) {
  }
}

void DownRevision::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DownRevision::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DownRevision_descriptor_;
}

const DownRevision& DownRevision::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_google_2fprotobuf_2funknown_5fenum_5ftest_2eproto();
  return *default_instance_;
}

DownRevision* DownRevision::default_instance_ = NULL;

DownRevision* DownRevision::New(::google::protobuf::Arena* arena) const {
  DownRevision* n = new DownRevision;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DownRevision::Clear() {
  value_ = 2;
  values_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool DownRevision::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.protobuf.util.DownRevision)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .google.protobuf.util.DownRevision.Enum value = 1 [default = DEFAULT_VALUE];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::google::protobuf::util::DownRevision_Enum_IsValid(value)) {
            set_value(static_cast< ::google::protobuf::util::DownRevision_Enum >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_values;
        break;
      }

      // repeated .google.protobuf.util.DownRevision.Enum values = 2;
      case 2: {
        if (tag == 16) {
         parse_values:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::google::protobuf::util::DownRevision_Enum_IsValid(value)) {
            add_values(static_cast< ::google::protobuf::util::DownRevision_Enum >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else if (tag == 18) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedEnumNoInline(
                 input,
                 &::google::protobuf::util::DownRevision_Enum_IsValid,
                 this->mutable_values())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_values;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.protobuf.util.DownRevision)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.protobuf.util.DownRevision)
  return false;
#undef DO_
}

void DownRevision::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.protobuf.util.DownRevision)
  // optional .google.protobuf.util.DownRevision.Enum value = 1 [default = DEFAULT_VALUE];
  if (has_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->value(), output);
  }

  // repeated .google.protobuf.util.DownRevision.Enum values = 2;
  for (int i = 0; i < this->values_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->values(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.protobuf.util.DownRevision)
}

::google::protobuf::uint8* DownRevision::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.protobuf.util.DownRevision)
  // optional .google.protobuf.util.DownRevision.Enum value = 1 [default = DEFAULT_VALUE];
  if (has_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->value(), target);
  }

  // repeated .google.protobuf.util.DownRevision.Enum values = 2;
  for (int i = 0; i < this->values_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->values(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.protobuf.util.DownRevision)
  return target;
}

int DownRevision::ByteSize() const {
  int total_size = 0;

  // optional .google.protobuf.util.DownRevision.Enum value = 1 [default = DEFAULT_VALUE];
  if (has_value()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->value());
  }

  // repeated .google.protobuf.util.DownRevision.Enum values = 2;
  {
    int data_size = 0;
    for (int i = 0; i < this->values_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::EnumSize(
        this->values(i));
    }
    total_size += 1 * this->values_size() + data_size;
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DownRevision::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const DownRevision* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const DownRevision*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void DownRevision::MergeFrom(const DownRevision& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  values_.MergeFrom(from.values_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_value()) {
      set_value(from.value());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void DownRevision::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DownRevision::CopyFrom(const DownRevision& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DownRevision::IsInitialized() const {

  return true;
}

void DownRevision::Swap(DownRevision* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DownRevision::InternalSwap(DownRevision* other) {
  std::swap(value_, other->value_);
  values_.UnsafeArenaSwap(&other->values_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DownRevision::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DownRevision_descriptor_;
  metadata.reflection = DownRevision_reflection_;
  return metadata;
}


// ===================================================================

const ::google::protobuf::EnumDescriptor* UpRevision_Enum_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UpRevision_Enum_descriptor_;
}
bool UpRevision_Enum_IsValid(int value) {
  switch(value) {
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const UpRevision_Enum UpRevision::DEFAULT_VALUE;
const UpRevision_Enum UpRevision::NONDEFAULT_VALUE;
const UpRevision_Enum UpRevision::NEW_VALUE;
const UpRevision_Enum UpRevision::NEW_VALUE_2;
const UpRevision_Enum UpRevision::NEW_VALUE_3;
const UpRevision_Enum UpRevision::Enum_MIN;
const UpRevision_Enum UpRevision::Enum_MAX;
const int UpRevision::Enum_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
const int UpRevision::kValueFieldNumber;
const int UpRevision::kValuesFieldNumber;
#endif  // !_MSC_VER

UpRevision::UpRevision()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.protobuf.util.UpRevision)
}

void UpRevision::InitAsDefaultInstance() {
}

UpRevision::UpRevision(const UpRevision& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:google.protobuf.util.UpRevision)
}

void UpRevision::SharedCtor() {
  _cached_size_ = 0;
  value_ = 2;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

UpRevision::~UpRevision() {
  // @@protoc_insertion_point(destructor:google.protobuf.util.UpRevision)
  SharedDtor();
}

void UpRevision::SharedDtor() {
  if (this != default_instance_) {
  }
}

void UpRevision::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UpRevision::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UpRevision_descriptor_;
}

const UpRevision& UpRevision::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_google_2fprotobuf_2funknown_5fenum_5ftest_2eproto();
  return *default_instance_;
}

UpRevision* UpRevision::default_instance_ = NULL;

UpRevision* UpRevision::New(::google::protobuf::Arena* arena) const {
  UpRevision* n = new UpRevision;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UpRevision::Clear() {
  value_ = 2;
  values_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool UpRevision::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.protobuf.util.UpRevision)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .google.protobuf.util.UpRevision.Enum value = 1 [default = DEFAULT_VALUE];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::google::protobuf::util::UpRevision_Enum_IsValid(value)) {
            set_value(static_cast< ::google::protobuf::util::UpRevision_Enum >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_values;
        break;
      }

      // repeated .google.protobuf.util.UpRevision.Enum values = 2;
      case 2: {
        if (tag == 16) {
         parse_values:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::google::protobuf::util::UpRevision_Enum_IsValid(value)) {
            add_values(static_cast< ::google::protobuf::util::UpRevision_Enum >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else if (tag == 18) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedEnumNoInline(
                 input,
                 &::google::protobuf::util::UpRevision_Enum_IsValid,
                 this->mutable_values())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_values;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.protobuf.util.UpRevision)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.protobuf.util.UpRevision)
  return false;
#undef DO_
}

void UpRevision::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.protobuf.util.UpRevision)
  // optional .google.protobuf.util.UpRevision.Enum value = 1 [default = DEFAULT_VALUE];
  if (has_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->value(), output);
  }

  // repeated .google.protobuf.util.UpRevision.Enum values = 2;
  for (int i = 0; i < this->values_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->values(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.protobuf.util.UpRevision)
}

::google::protobuf::uint8* UpRevision::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.protobuf.util.UpRevision)
  // optional .google.protobuf.util.UpRevision.Enum value = 1 [default = DEFAULT_VALUE];
  if (has_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->value(), target);
  }

  // repeated .google.protobuf.util.UpRevision.Enum values = 2;
  for (int i = 0; i < this->values_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->values(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.protobuf.util.UpRevision)
  return target;
}

int UpRevision::ByteSize() const {
  int total_size = 0;

  // optional .google.protobuf.util.UpRevision.Enum value = 1 [default = DEFAULT_VALUE];
  if (has_value()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->value());
  }

  // repeated .google.protobuf.util.UpRevision.Enum values = 2;
  {
    int data_size = 0;
    for (int i = 0; i < this->values_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::EnumSize(
        this->values(i));
    }
    total_size += 1 * this->values_size() + data_size;
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UpRevision::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const UpRevision* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const UpRevision*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void UpRevision::MergeFrom(const UpRevision& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  values_.MergeFrom(from.values_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_value()) {
      set_value(from.value());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void UpRevision::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpRevision::CopyFrom(const UpRevision& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpRevision::IsInitialized() const {

  return true;
}

void UpRevision::Swap(UpRevision* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UpRevision::InternalSwap(UpRevision* other) {
  std::swap(value_, other->value_);
  values_.UnsafeArenaSwap(&other->values_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UpRevision::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = UpRevision_descriptor_;
  metadata.reflection = UpRevision_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace util
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
