/*
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package com.google.protobuf.kotlin

/**
 * A representation of a choice of a oneof option in a proto message, including the value associated
 * with the chosen field.
 *
 * User code should never need to reference this type.  They should, instead, reference the subtypes
 * generated by the Kotlin proto extension generator.
 */
abstract class OneofRepresentation<T : Any, C : Enum<C>> {

  abstract val value: T
  abstract val case: C

  override fun equals(other: Any?): Boolean =
    other is OneofRepresentation<*, *> &&
      case == other.case && // enum cases should be uniquely associated with a specific oneof
      value == other.value

  override fun hashCode(): Int =
    31 * case.hashCode() + value.hashCode()

  override fun toString(): String =
    "OneofRepresentation(case=$case,value=$value)"
}
