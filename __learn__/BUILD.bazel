load("@bazel_skylib//rules:common_settings.bzl", "string_flag")
load("@rules_cc//cc:defs.bzl", "cc_binary", "cc_library", "cc_proto_library", "cc_test")
load("@rules_pkg//:mappings.bzl", "pkg_files", "strip_prefix")
load("@rules_proto//proto:defs.bzl", "proto_lang_toolchain", "proto_library")
load("@rules_java//java:defs.bzl", "java_binary", "java_lite_proto_library", "java_proto_library")
load("//build_defs:cpp_opts.bzl", "COPTS", "LINK_OPTS", "PROTOC_LINK_OPTS")
load(":protobuf.bzl", "py_proto_library")

licenses(["notice"])

exports_files(["LICENCE"])

# Well Known Types Proto Library rules
# https://developers.google.com/protocol-buffers/docs/reference/google.protobuf
# Can be used with one of the language specific proto library rules i.e. java_proto_library:
#
# java_proto_library(
#   name = "any_java_proto",
#   deps = ["@com_google_protobuf//:any_proto"],
# )

alias(
  name = "any_proto",
  actual = "//src/google/protobuf:any_proto",
  visibility = ["//visibility:public"],
)

alias(
  name = "api_proto",
  actual = "//src/google/protobuf:api_proto",
  visibility = ["//visibility:public"],
)

alias(
  name = "duration_proto",
  actual = "//src/google/protobuf:duration_proto",
  visibility = ["//visibility:public"],
)

alias(
  name = "empty_proto",
  actual = "//src/google/protobuf:empty_proto",
  visibility = ["//visibility:public"],
)

alias(
  name = "field_mask_proto",
  actual = "//src/google/protobuf:field_mask_proto",
  visibility = ["//visibility:public"],
)

alias(
  name = "source_context_proto",
  actual = "//src/google/protobuf:source_context_proto",
  visibility = ["//visibility:public"],
)

alias(
  name = "struct_proto",
  actual = "//src/google/protobuf:struct_proto",
  visibility = ["//visibility:public"],
)

alias(
  name = "timestamp_proto",
  actual = "//src/google/protobuf:timestamp_proto",
  visibility = ["//visibility:public"],
)

alias(
  name = "type_proto",
  actual = "//src/google/protobuf:type_proto",
  visibility = ["//visibility:public"],
)

alias(
  name = "wrappers_proto",
  actual = "//src/google/protobuf:wrappers_proto",
  visibility = ["//visibility:public"],
)

# Source files - aliases to a filegroup, not a 'proto_library' - internal stuff
alias(
  name = "lite_well_known_protos",
  actual = "//src/google/protobuf:well_known_type_protos", # filegroup
  visibility = ["//visibility:public"],
)

alias(
  name = "well_known_type_protos",
  actual = "//src/google/protobuf:well_known_type_protos", # filegroup
  visibility = ["//visibility:public"],
)

# internal runtime protos - they're not well-known types
alias(
  name = "descriptor_proto",
  actual = "//src/google/protobuf:descriptor_proto", # proto_library
  visibility = ["//visibility:public"],
)

alias(
  name = "descriptor_proto_srcs",
  actual = "//src/google/protobuf:descriptor_proto_srcs", # filegroup
  visibility = ["//visibility:public"],
)

alias(
  name = "compiler_plugin_proto",
  actual = "//src/google/protobuf/compiler:plugin_proto", # proto_library
  visibility = ["//visibility:public"],
)

cc_library(
  name = "cc_wkt_protos",
  deprecation = "Only for backward compatibility; please avoid",
  visibility = ["//visibility:public"],
)

# deprecated source protos typically part of the protobuf runtime
# As an alternative try :well_known_type_protos (Well-Known Types) https://developers.google.com/protocol-buffers/docs/reference/google.protobuf
# For descriptor.proto (source) try :descriptor_proto(_srcs)
# For compiler/plugin.proto try :compiler_plugin_proto
filegroup(
  name = "well_known_protos",
  srcs = [
    ":descriptor_proto_srcs",
    ":well_known_type_protos",
    "//src/google/protobuf/compiler:plugin.proto"
  ],
  deprecation = "We recommend using :well_known_type_protos as an alternative",
  visibility = ["//visibility:public"],
)

# Compiler
cc_binary(
  name = "protoc",
  linkopts = LINK_OPTS + PROTOC_LINK_OPTS,
  visibility = ["//visibility:public"],
  deps = ["//src/google/protobuf/compiler:protoc_lib"],
)
