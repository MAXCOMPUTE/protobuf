# Simple build tests for compatibility of gencode from previous major versions
# with the current runtime.
#
# To add more test cases in Java, use java_runtime_conformance as below, and add
# the corresponding http_archive in the WORKSPACE file for the version.

load("//compatibility:runtime_conformance.bzl", "java_runtime_conformance")

package(
    default_visibility = ["//visibility:public"],
)

# exports_files(
#     glob(["v3.25.0/*.srcjar"]) + 
#     glob(["v3.25.0/*.jar"])
# )

filegroup(
    name = "v3.25.0_srcjar",
    srcs = glob(["v3.25.0/*.srcjar"]),
    testonly = True,
    visibility= ["//java/core:__pkg__"],
)

filegroup(
    name = "v3.25.0_jar",
    srcs = glob(["v3.25.0/*.jar"]),
    testonly = True,
    visibility= ["//java/core:__pkg__"],
)

# main gencode builds with main runtime as a proof of concept.
java_runtime_conformance(
    name = "java_conformance_main",
    gencode_version = "main",
)

# Generates a build_test named "conformance_v3.25.0"
java_runtime_conformance(
    name = "java_conformance_v3.25.0",
    gencode_version = "3.25.0",
)

java_test(
    name = "java_conformance_unittest_v3.25.0_jar",
    size = "small",
    test_class = "com.google.protobuf.CompatibilityTest",
    srcs = ["CompatibilityTest.java"],
    deps = [
        ":libconformance_v3.25.0_lib.jar",
        "//java/core",
        "//java/core:test_util",
        "@maven//:junit_junit",
        "@maven//:com_google_truth_truth",
    ],
)


java_test(
    name = "java_conformance_unittest_v3.25.0",
    size = "small",
    test_class = "com.google.protobuf.CompatibilityTest",
    srcs = ["CompatibilityTest.java"],
    deps = [
        ":conformance_v3.25.0_lib",
        "//java/core",
        "//java/core:test_util",
        "@maven//:junit_junit",
        "@maven//:com_google_truth_truth",
    ],
)
